#!/usr/bin/env bash

# Fail on first line that fails.
set -e

#!/usr/bin/env bash

# Check if this is the initial commit
if git rev-parse --verify HEAD >/dev/null 2>&1
then
  against=HEAD
else
  against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# Use git diff-index to check for whitespace errors
if ! git diff-index --check --cached $against -- ':!*.js.snap' .
then
  echo "Aborting commit due to whitespace errors."
  exit 1
fi

# Only keep staged files that are added (A), copied (C) or modified (M).
STAGED=$(git --no-pager diff --name-only --cached --diff-filter=ACM)
# Files which are only partly staged (eg. git add --patch).
PATCH_STAGED=$(git --no-pager diff --name-only --diff-filter=ACM $STAGED)
# Files which are fully staged.
FULLY_STAGED=$(comm -23 <(echo "$STAGED") <(echo "$PATCH_STAGED"))

BIOME_STAGED=$(grep -E '.(css|js|ts|tsx|json|jsonc|json5)$' <<< "$STAGED" || true)
BIOME_FULLY_STAGED=$(grep -E '.(css|js|ts|tsx|json|jsonc|json5)$' <<< "$FULLY_STAGED" || true)
PRETTIER_STAGED=$(grep -E '.(md|yml|yaml|html)$' <<< "$STAGED" || true)
PRETTIER_FULLY_STAGED=$(grep -E '.(md|yml|yaml|html)$' <<< "$FULLY_STAGED" || true)
# Uncomment, and add more variables to the list, for debugging help.
# tr ' ' '\n' <<< "STAGED $STAGED PATCH_STAGED $PATCH_STAGED FULLY_STAGED $FULLY_STAGED

if [ -n "$BIOME_FULLY_STAGED" ]; then
  npx @biomejs/biome check --write --staged --no-errors-on-unmatched --reporter=summary $BIOME_FULLY_STAGED
  git add $BIOME_FULLY_STAGED
fi

if [ -n "$BIOME_STAGED" ]; then
  npx @biomejs/biome check --staged --no-errors-on-unmatched --reporter=summary $BIOME_STAGED
fi

if [ -n "$PRETTIER_FULLY_STAGED" ]; then
  npx prettier --write $PRETTIER_FULLY_STAGED
  git add $PRETTIER_FULLY_STAGED
fi

if [ -n "$PRETTIER_STAGED" ]; then
  npx prettier --check $PRETTIER_STAGED
fi
